class LRUCache {

    private final Map<Integer, Integer> m;

    public LRUCache(int capacity) {
        m = new LinkedHashMap<>(capacity, Integer.MAX_VALUE, true) {
        @Override
        protected boolean removeEldestEntry(Map.Entry<Integer, Integer> eldest) {
            return size() > capacity; // Remove if capacity is exceeded
        }
    };
    }
    
    public int get(int key) {
        return m.getOrDefault(key, -1);
    }
    
    public void put(int key, int value) {
        m.put(key, value);
    }
}

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */