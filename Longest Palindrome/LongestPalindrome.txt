class Solution {
    public int longestPalindrome(String s) {
        Map<Character, Integer> count = new HashMap<>();
        
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            count.merge(c, 1, Integer::sum);
        }

        int maxLenPalindrome = 0;

        for (Map.Entry<Character, Integer> e : count.entrySet()) {
            if(e.getValue() == s.length())
                return s.length();
            if(e.getValue() % 2 == 0)
                maxLenPalindrome += e.getValue();
            if(e.getValue() % 2 == 1)
                maxLenPalindrome += e.getValue() - 1;
        }

        if(maxLenPalindrome != s.length())
            maxLenPalindrome++;

        return maxLenPalindrome;
    }
}